@model Auger.Models.Data.Script

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
      <h4>Script</h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.AssignmentId)


        <div class="form-group">
          <label for="PageId" class="control-label col-md-2">Page</label>
          <div class="col-md-10">
            <select name="PageId" id="PageId" class="form-control">
              <option value="" @(Model.PageId.HasValue ? "" : "selected")>[ALL PAGES]</option>
              @foreach (Auger.Models.Data.Page page in ViewBag.Pages)
              {
                  <option value="@page.PageId" @(Model.PageId == page.PageId ? "selected" : "")>@page.PageName</option>
              }
            </select>
            @Html.ValidationMessageFor(model => model.PageId, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScriptName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScriptName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ScriptName, "", new { @class = "text-danger" })
            </div>
        </div>

      <div class="form-group">
        <label for="DeviceId" class="control-label col-md-2">Device</label>
        <div class="col-md-10">
          <select name="DeviceId" id="DeviceId" class="form-control">
            <option value="" @(string.IsNullOrWhiteSpace(Model.DeviceId) ? "" : "selected")>[ALL DEVICES]</option>
            @foreach (var device in Device.AllDevices)
            {
                <option value="@device.DeviceId" @(Model.DeviceId == device.DeviceId ? "selected" : "")>@device.DeviceName</option>
            }
          </select>
          @Html.ValidationMessageFor(model => model.DeviceId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          @Html.EditorFor(model => model.IsPreGrade)
          @Html.LabelFor(model => model.IsPreGrade, new { @class = "control-label" })
          @Html.ValidationMessageFor(model => model.IsPreGrade, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Create" class="btn btn-success" />
          <a class="btn btn-default" role="button" href="~/CourseAdmin/ManageScripts/@Model.Assignment.CourseId/@Model.AssignmentId">
            Cancel
          </a>
        </div>
      </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/scripts/jqueryval")
}
