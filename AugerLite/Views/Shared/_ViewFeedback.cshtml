@{ 
    var showDebug = ViewBag.ShowDebug == true;
}
<script>
  var _showDebug = @(showDebug ? "true" : "false");
</script>

<div class="row full-height">
  <div class="full-height-overflow" id="feedback-container">
    <div class="col-md-4" id="dom-check-container"></div>
    <div class="col-md-4" id="html-validation-container"></div>
    <div class="col-md-4" id="css-validation-container"></div>
    <div class="col-lg-12" id="debug-container"></div>
  </div>
</div>

<script>
    // declare top-level events
    var FEEDBACK_CHANGING_EVENT = 'feedbackchanging';
    function FeedbackChanging() {
      var evt = $.Event(FEEDBACK_CHANGING_EVENT);
      $(window).trigger(evt);
    }
    function OnFeedbackChanging(func) {
      $(window).on(FEEDBACK_CHANGING_EVENT, func);
    }

    var FEEDBACK_CHANGED_EVENT = 'feedbackchanged';
    function FeedbackChanged(feedback) {
      var evt = $.Event(FEEDBACK_CHANGED_EVENT);
      evt.Feedback = feedback;
      $(window).trigger(evt);
    }
    function OnFeedbackChanged(func) {
      $(window).on(FEEDBACK_CHANGED_EVENT, func);
    }
</script>

<script>
  function Page(name) {
    this.Name = name;
    this.Failures = [];
    this.HtmlMessages = [];
    this.CssMessages = [];
    this.IsNewCssFormat = false;
    this.HasFailures = function () { return this.Failures.length > 0; };
    this.HasHtmlMessages = function () { return this.HtmlMessages.length > 0; };
    this.HasCssMessages = function () { return this.CssMessages.length > 0 };
    this.HasDebugMessages = function () { return this.DebugMessages.length > 0; };
  }
  function GetPage(fb, name) {
    if (!fb.Pages) {
      fb.Pages = [];
      fb.PagesMap = {};
    }
    page = fb.PagesMap[name];
    if (!page) {
      page = new Page(name);
      fb.PagesMap[name] = page;
      fb.Pages.push(page);
    }
    return page;
  }

  OnFeedbackChanging(function () {
    $('#dom-check-container').empty();
    $('#html-validation-container').empty();
    $('#css-validation-container').empty();
    $('#debug-container').empty();
    showLoadingDiv($('#feedback-container'));
  });

  OnFeedbackChanged(function (e) {
    var fb = e.Feedback;

    if (!fb) {
      fb = {
        DomTestComplete: false,
        HtmlValidationCompleted: false,
        CssValidationCompleted: false
      }
    }

    fb.DomTestPanelClass = "danger";
    if (fb.DomTestComplete) {
      fb.DomErrorCount = fb.Failures.length + fb.Exceptions.length;
      fb.HasDomErrors = fb.DomTestComplete && fb.DomErrorCount > 0;
      if (!fb.HasDomErrors) fb.DomTestPanelClass = "success";
      fb.HasExceptions = fb.Exceptions.length > 0;
      fb.HasFailures = fb.Failures.length > 0;
      for (var i = 0; i < fb.Failures.length; i++) {
        var test = fb.Failures[i];
        page = GetPage(fb, test.Page);
        page.Failures.push(test);
      }
    }

    fb.HtmlPanelClass = "danger";
    if (fb.HtmlValidationCompleted) {
      fb.HtmlMessages = fb.W3CHtmlValidationMessages.filter(
        function (m) { return m.Type && m.Type.toLowerCase() === 'error' }
      );
      fb.HtmlMessageCount = fb.HtmlMessages.length;
      fb.HasHtmlMessages = fb.HtmlMessageCount > 0;
      if (!fb.HasHtmlMessages) fb.HtmlPanelClass = "success";
      for (var i = 0; i < fb.HtmlMessages.length; i++) {
        var message = fb.HtmlMessages[i];
        if (!!message.Extract) {
          message.Extract1 = message.Extract;
          var start = message.HiliteStart;
          var len = message.HiliteLength;
          if (start >= 0 && len >= 0) {
            message.Extract1 = message.Extract.substr(0, start);
            message.Extract2 = message.Extract.substr(start, len);
            message.Extract3 = message.Extract.substr(start + len);
          }
        }
        page = GetPage(fb, message.Page);
        page.HtmlMessages.push(message);
      }
    }

    fb.CssPanelClass = "danger";
    if (fb.CssValidationCompleted) {
      if (fb.W3CCssValidationMessagesNew.length > 0) {
        fb.CssMessages = fb.W3CCssValidationMessagesNew.filter(
          function (m) { return m.Type && m.Type.toLowerCase() === 'error' }
        );
        fb.CssMessageCount = fb.CssMessages.length;
        fb.HasCssMessages = fb.CssMessageCount > 0;
        if (!fb.HasCssMessages) fb.CssPanelClass = "success";
        for (var i = 0; i < fb.CssMessages.length; i++) {
          var message = fb.CssMessages[i];
          if (!!message.Extract) {
            message.Extract1 = message.Extract;
            var start = message.HiliteStart;
            var len = message.HiliteLength;
            if (start >= 0 && len >= 0) {
              message.Extract1 = message.Extract.substr(0, start);
              message.Extract2 = message.Extract.substr(start, len);
              message.Extract3 = message.Extract.substr(start + len);
            }
          }
          page = GetPage(fb, message.Page);
          page.IsNewCssFormat = true;
          page.CssMessages.push(message);
        }
      } else {
        fb.CssMessages = fb.W3CCssValidationMessages.filter(function (m) { return m.Type && m.Type.toLowerCase() === 'error' });
        fb.CssErrorCount = fb.CssMessages.length;
        fb.HasCssErrors = fb.CssErrorCount > 0;
        if (!fb.HasCssErrors) fb.CssPanelClass = "success";
        for (var i = 0; i < fb.CssMessages.length; i++) {
          var message = fb.CssMessages[i];
          page = GetPage(fb, message.Page);
          page.CssMessages.push(message);
        }
      }
    }

    fb.DebugMessageCount = fb.DebugMessages.length;
    fb.HasDebugMessages = fb.DebugMessageCount > 0;

    var domTemplate = $("#dom-check-template").html();
    var htmlTemplate = $("#html-validation-template").html();
    var cssTemplate = $("#css-validation-template").html();
    var debugTemplate = $("#debug-template").html();

    $('#dom-check-container').html(Mustache.render(domTemplate, fb));
    $('#html-validation-container').html(Mustache.render(htmlTemplate, fb));
    $('#css-validation-container').html(Mustache.render(cssTemplate, fb));
    if (_showDebug) $('#debug-container').html(Mustache.render(debugTemplate, fb));

    hideLoadingDiv($('#feedback-container'));
  });
</script>

<script type="text/template" id="dom-check-template">
  <div class="panel panel-{{DomTestPanelClass}}">
    <div class="panel-heading">
      <h4>
        Assignment Error Check
        <span id="domCheckBadge" class="badge pull-right">
          {{#DomTestComplete}}
            {{#HasDomErrors}}
              {{DomErrorCount}}
            {{/HasDomErrors}}
            {{^HasDomErrors}}
              <i class="fa fa-check"></i>
            {{/HasDomErrors}}
          {{/DomTestComplete}}
          {{^DomTestComplete}}
            <i class="fa fa-warning"></i>
          {{/DomTestComplete}}
        </span>
      </h4>
    </div>
    <div class="panel-body">
      <ul id="domErrorsList" style="padding-left:10px;">
        {{#DomTestComplete}}
          {{#HasDomErrors}}
            {{#HasExceptions}}
              <li style="list-style-type:none;margin-left:-10px;">
                <h4><i class="fa fa-warning"></i> General Errors</h4>
              </li>
            {{/HasExceptions}}
            {{#Exceptions}}
              <li>{{.}}</li>
            {{/Exceptions}}
            {{#Pages}}
              {{#HasFailures}}
                <li style="list-style-type:none;margin-left:-10px;">
                  <h4><i class="fa fa-file-code-o"></i> {{Name}}</h4>
                </li>
                {{#Failures}}
                  <li>{{Title}}</li>
                {{/Failures}}
              {{/HasFailures}}
            {{/Pages}}
          {{/HasDomErrors}}
          {{^HasDomErrors}}
            <li style="list-style-type:none;margin-left:-10px;">
              Congratulations! No errors found. Remember that this simply
              means that the assignment passes a basic "sanity-check". It
              does not mean that your assignment is 100% correct.
            </li>
          {{/HasDomErrors}}
        {{/DomTestComplete}}
        {{^DomTestComplete}}
          <li style="list-style-type:none;margin-left:-10px;">
            Though the assignment was successfully submitted, we were
            unable to run the assignment check. This may mean that the
            assignment had no specific items to check or it may mean
            that the process failed. You may recheck the assignment
            by clicking the button above and to the right. If you keep
            getting this message, then likely there is nothing to check
            and all is well.
          </li>
        {{/DomTestComplete}}
      </ul>
    </div>
  </div>
</script>

<script type="text/template" id="html-validation-template">
  <div class="panel panel-{{HtmlPanelClass}}">
    <div class="panel-heading">
      <h4>
        W3C HTML Validation
        <span id="htmlValidationBadge" class="badge pull-right">
          {{#HtmlValidationCompleted}}
            {{#HasHtmlMessages}}
              {{HtmlMessageCount}}
            {{/HasHtmlMessages}}
            {{^HasHtmlMessages}}
              <i class="fa fa-check"></i>
            {{/HasHtmlMessages}}
          {{/HtmlValidationCompleted}}
          {{^HtmlValidationCompleted}}
            <i class="fa fa-warning"></i>
          {{/HtmlValidationCompleted}}
        </span>
      </h4>
    </div>
    <div class="panel-body">
      <ul style="padding-left:10px;">
        {{#HtmlValidationCompleted}}
          {{#HasHtmlMessages}}
            {{#Pages}}
              {{#HasHtmlMessages}}
                <li style="list-style-type:none;margin-left:-10px;">
                  <h4><i class="fa fa-file-code-o"></i> {{Name}}</h4>
                </li>
                {{#HtmlMessages}}
                  <li>
                    line {{LastLine}}: {{Message}}
                    <pre class="auger-extract">...{{Extract1}}<span class="auger-hilite">{{Extract2}}</span>{{Extract3}}...</pre>
                  </li>
                {{/HtmlMessages}}
              {{/HasHtmlMessages}}
            {{/Pages}}
          {{/HasHtmlMessages}}
          {{^HasHtmlMessages}}
            <li style="list-style-type:none;margin-left:-10px;">
              Congratulations! No HTML Validation issues found.
            </li>
          {{/HasHtmlMessages}}
        {{/HtmlValidationCompleted}}
        {{^HtmlValidationCompleted}}
          <li style="list-style-type:none;margin-left:-10px;">
            Though your assignment was successfully submitted, we were
            unable to run the W3C HTML Validation. You may recheck the
            assignment by clicking the button above and to the right.
          </li>
        {{/HtmlValidationCompleted}}
      </ul>
    </div>
  </div>
</script>

<script type="text/template" id="css-validation-template">
  <div id="cssValidation" class="panel panel-{{CssPanelClass}}">
    <div class="panel-heading">
      <h4>
        W3C CSS Validation
        <span id="cssValidationBadge" class="badge pull-right">
          {{#CssValidationCompleted}}
            {{#HasCssMessages}}
              {{CssMessageCount}}
            {{/HasCssMessages}}
            {{^HasCssMessages}}
              <i class="fa fa-check"></i>
            {{/HasCssMessages}}
          {{/CssValidationCompleted}}
          {{^CssValidationCompleted}}
            <i class="fa fa-warning"></i>
          {{/CssValidationCompleted}}
        </span>
      </h4>
    </div>
    <div class="panel-body">
      <ul id="cssValidationList" style="padding-left:10px;">
        {{#CssValidationCompleted}}
          {{#HasCssMessages}}
            {{#Pages}}
              {{#HasCssMessages}}
                <li style="list-style-type:none;margin-left:-10px;">
                  <h4><i class="fa fa-file-text-o"></i> {{Name}}</h4>
                </li>
                {{#IsNewCssFormat}}
                  {{#CssMessages}}
                    <li>
                      line {{LastLine}}: {{Message}}
                      <pre class="auger-extract">...{{Extract1}}<span class="auger-hilite">{{Extract2}}</span>{{Extract3}}...</pre>
                    </li>
                  {{/CssMessages}}
                {{/IsNewCssFormat}}
                {{^IsNewCssFormat}}
                  {{#CssMessages}}
                    <li>
                      line {{Line}}: {{Message}}
                      {{#Context}}
                        <span class="auger-context">(in {{Context}} selector)</span>
                      {{/Context}}
                    </li>
                  {{/CssMessages}}
                {{/IsNewCssFormat}}
              {{/HasCssMessages}}
            {{/Pages}}
          {{/HasCssMessages}}
          {{^HasCssMessages}}
            <li style="list-style-type:none;margin-left:-10px;">
              Congratulations! No CSS Validation issues found.
            </li>
          {{/HasCssMessages}}
        {{/CssValidationCompleted}}
        {{^CssValidationCompleted}}
          <li style="list-style-type:none;margin-left:-10px;">
            Though your assignment was successfully submitted, we were
            unable to run the W3C CSS Validation. You may recheck the
            assignment by clicking the button above and to the right.
          </li>
        {{/CssValidationCompleted}}
      </ul>
    </div>
  </div>
</script>

<script type="text/template" id="debug-template">
  {{#HasDebugMessages}}
  <div id="cssValidation" class="panel panel-warning">
    <div class="panel-heading">
      <h4>
        DEBUG MESSAGES
        <span id="cssValidationBadge" class="badge pull-right">
          {{DebugMessageCount}}
        </span>
      </h4>
    </div>
    <div class="panel-body">
      <ul id="debugList" style="padding-left:10px;">
        {{#DebugMessages}}
          <li>{{.}}</li>
        {{/DebugMessages}}
      </ul>
    </div>
  </div>
  {{/HasDebugMessages}}
</script>